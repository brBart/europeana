   1) example/src/Example.php
[33m      ---------- begin diff ----------[39m
      [37;41m---[39;49m Original
      [32m+++[39m New
      @@ @@
       
      [37;41m-[39;49mclass Example {
      [32m+[39mclass Example
      [32m+[39m{
       
      [37;41m-[39;49m	private $search;
      [32m+[39m    private $search;
       
      [37;41m-[39;49m	private $apiClient;
      [32m+[39m    private $apiClient;
       
      [37;41m-[39;49m	public function __construct(ApiClient $apiClient)
      [37;41m-[39;49m	{
      [37;41m-[39;49m		$this->apiClient = $apiClient;
      [32m+[39m    public function __construct(ApiClient $apiClient)
      [32m+[39m    {
      [32m+[39m        $this->apiClient = $apiClient;
      [32m+[39m    }
       
      [37;41m-[39;49m	}
      [32m+[39m    public function getBasicSearchQuery()
      [32m+[39m    {
      [32m+[39m        $searchPayload = new SearchPayload();
      [32m+[39m        $searchPayload->setQuery("Mona Lisa");
       
      [37;41m-[39;49m	public function getBasicSearchQuery()
      [37;41m-[39;49m	{
      [37;41m-[39;49m		$searchPayload = new SearchPayload();
      [37;41m-[39;49m		$searchPayload->setQuery("Mona Lisa");
      [32m+[39m        try {
      [32m+[39m            $response = $this->apiClient->send($searchPayload, 'api2demo');
      [32m+[39m            var_dump($response->getAction());
      [32m+[39m            var_dump($response->getSuccess());
      [32m+[39m            var_dump($response->getRequestNumber());
      [32m+[39m            var_dump($response->getItemsCount());
      [32m+[39m            var_dump($response->getTotalResults());
      [32m+[39m            $items = $response->getItems();
      [32m+[39m            var_dump($items);
      [32m+[39m            var_dump($items->get(1)->getId());
      [32m+[39m            var_dump($items->get(1)->getCompleteness());
      [32m+[39m            var_dump($items->get(1)->getEuropeanaCollectionName());
      [32m+[39m            var_dump($items->get(1)->getIndex());
      [32m+[39m            var_dump($items->get(1)->getEdmDatasetName());
      [32m+[39m            var_dump($items->get(1)->getPreviewNoDistribute());
      [32m+[39m            var_dump($items->get(1)->getTitle());
      [32m+[39m            var_dump($items->get(1)->getDataProvider());
      [32m+[39m            var_dump($items->get(1)->getRights());
      [32m+[39m            var_dump($items->get(1)->getScore());
      [32m+[39m            var_dump($items->get(1)->getEdmIsShownAt());
      [32m+[39m            var_dump($items->get(1)->getEuropeanaCompleteness());
      [32m+[39m            var_dump($items->get(1)->getEdmPreview());
      [32m+[39m            var_dump($items->get(1)->getTimestamp());
      [32m+[39m            var_dump($items->get(1)->getProvider());
      [32m+[39m            var_dump($items->get(1)->getLanguage());
      [32m+[39m            var_dump($items->get(1)->getType());
      [32m+[39m            var_dump($items->get(1)->getOptedOut());
      [32m+[39m            var_dump($items->get(1)->getLink());
      [32m+[39m            var_dump($items->get(1)->getGuid());
      [32m+[39m        } catch (EuropeanaException $e) {
      [32m+[39m            // Do something
      [32m+[39m        }
      [32m+[39m    }
       
      [37;41m-[39;49m		try {
      [37;41m-[39;49m			$response = $this->apiClient->send($searchPayload, 'api2demo');
      [37;41m-[39;49m			var_dump($response->getAction());
      [37;41m-[39;49m			var_dump($response->getSuccess());
      [37;41m-[39;49m			var_dump($response->getRequestNumber());
      [37;41m-[39;49m			var_dump($response->getItemsCount());
      [37;41m-[39;49m			var_dump($response->getTotalResults());
      [37;41m-[39;49m			$items = $response->getItems();
      [37;41m-[39;49m			var_dump($items);
      [37;41m-[39;49m			var_dump($items->get(1)->getId());
      [37;41m-[39;49m			var_dump($items->get(1)->getCompleteness());
      [37;41m-[39;49m			var_dump($items->get(1)->getEuropeanaCollectionName());
      [37;41m-[39;49m			var_dump($items->get(1)->getIndex());
      [37;41m-[39;49m			var_dump($items->get(1)->getEdmDatasetName());
      [37;41m-[39;49m			var_dump($items->get(1)->getPreviewNoDistribute());
      [37;41m-[39;49m			var_dump($items->get(1)->getTitle());
      [37;41m-[39;49m			var_dump($items->get(1)->getDataProvider());
      [37;41m-[39;49m			var_dump($items->get(1)->getRights());
      [37;41m-[39;49m			var_dump($items->get(1)->getScore());
      [37;41m-[39;49m			var_dump($items->get(1)->getEdmIsShownAt());
      [37;41m-[39;49m			var_dump($items->get(1)->getEuropeanaCompleteness());
      [37;41m-[39;49m			var_dump($items->get(1)->getEdmPreview());
      [37;41m-[39;49m			var_dump($items->get(1)->getTimestamp());
      [37;41m-[39;49m			var_dump($items->get(1)->getProvider());
      [37;41m-[39;49m			var_dump($items->get(1)->getLanguage());
      [37;41m-[39;49m			var_dump($items->get(1)->getType());
      [37;41m-[39;49m			var_dump($items->get(1)->getOptedOut());
      [37;41m-[39;49m			var_dump($items->get(1)->getLink());
      [37;41m-[39;49m			var_dump($items->get(1)->getGuid());
      [32m+[39m    /**
      [32m+[39m    * Constructor
      [32m+[39m    */
      [32m+[39m    /* public function __construct(Search $search) {
      [32m+[39m            $this->search = $search;
      [32m+[39m            $this->search->setPublicKey('yF4xXWLcP');
      [32m+[39m    }
       
      [37;41m-[39;49m		} catch (EuropeanaException $e) {
      [37;41m-[39;49m			// Do something
      [37;41m-[39;49m		}
      [37;41m-[39;49m	}
      [37;41m-[39;49m
      [37;41m-[39;49m	/**
      [37;41m-[39;49m	* Constructor
      [37;41m-[39;49m	*/
      [37;41m-[39;49m	/* public function __construct(Search $search) {
      [37;41m-[39;49m			$this->search = $search;
      [37;41m-[39;49m			$this->search->setPublicKey('yF4xXWLcP');
      [37;41m-[39;49m	}
      [37;41m-[39;49m
      [37;41m-[39;49m	public function getBasicSearchQuery() {
      [37;41m-[39;49m		$request = new Request();
      [37;41m-[39;49m		$request->setQuery('Mona Lisa');
      [37;41m-[39;49m		$this->search->setRequest($request);
      [37;41m-[39;49m		$this->search->send();
      [37;41m-[39;49m		$d = $this->search->getResponse();
      [37;41m-[39;49m	}*/
      [37;41m-[39;49m
      [37;41m-[39;49m
      [32m+[39m    public function getBasicSearchQuery() {
      [32m+[39m        $request = new Request();
      [32m+[39m        $request->setQuery('Mona Lisa');
      [32m+[39m        $this->search->setRequest($request);
      [32m+[39m        $this->search->send();
      [32m+[39m        $d = $this->search->getResponse();
      [32m+[39m    }*/
       }
       
      
[33m      ---------- end diff ----------[39m

   2) example/src/ExampleCommand.php
[33m      ---------- begin diff ----------[39m
      [37;41m---[39;49m Original
      [32m+++[39m New
      @@ @@
       /**
      [37;41m-[39;49m* A symfony 2 console command.
      [37;41m-[39;49m*
      [37;41m-[39;49m* @since v1.0
      [37;41m-[39;49m* @author Matthias Vandermaesen <matthias.vandermaesen@gmail.com>
      [37;41m-[39;49m*/
      [37;41m-[39;49mclass ExampleCommand extends Command {
      [37;41m-[39;49m	/**
      [37;41m-[39;49m	* @var Example
      [37;41m-[39;49m	*/
      [37;41m-[39;49m	private $example;
      [32m+[39m * A symfony 2 console command.
      [32m+[39m *
      [32m+[39m * @since v1.0
      [32m+[39m * @author Matthias Vandermaesen <matthias.vandermaesen@gmail.com>
      [32m+[39m */
      [32m+[39mclass ExampleCommand extends Command
      [32m+[39m{
      [32m+[39m    /**
      [32m+[39m     * @var Example
      [32m+[39m     */
      [32m+[39m    private $example;
       
      [37;41m-[39;49m	/**
      [37;41m-[39;49m	* Constructor
      [37;41m-[39;49m	*
      [37;41m-[39;49m	* @param Example $example An istance of type Example. Injected as a service
      [37;41m-[39;49m	*                         by the container.
      [37;41m-[39;49m	*/
      [37;41m-[39;49m	public function __construct(Example $example)
      [37;41m-[39;49m	{
      [37;41m-[39;49m		$this->example = $example;
      [37;41m-[39;49m		parent::__construct();
      [37;41m-[39;49m	}
      [32m+[39m    /**
      [32m+[39m     * Constructor
      [32m+[39m     *
      [32m+[39m     * @param Example $example An istance of type Example. Injected as a service
      [32m+[39m     *                         by the container.
      [32m+[39m     */
      [32m+[39m    public function __construct(Example $example)
      [32m+[39m    {
      [32m+[39m        $this->example = $example;
      [32m+[39m        parent::__construct();
      [32m+[39m    }
       
      [37;41m-[39;49m	/**
      [37;41m-[39;49m	* {@inheritdoc}
      [37;41m-[39;49m	*/
      [37;41m-[39;49m	protected function configure()
      [37;41m-[39;49m	{
      [37;41m-[39;49m		$this->setName("europeana:example")
      [37;41m-[39;49m		->addOption('call', null, InputOption::VALUE_OPTIONAL, '', 'all')
      [37;41m-[39;49m		->setDescription("Example implementation of the Euroepe library.");
      [37;41m-[39;49m	}
      [32m+[39m    /**
      [32m+[39m     * {@inheritdoc}
      [32m+[39m     */
      [32m+[39m    protected function configure()
      [32m+[39m    {
      [32m+[39m        $this->setName("europeana:example")
      [32m+[39m        ->addOption('call', null, InputOption::VALUE_OPTIONAL, '', 'all')
      [32m+[39m        ->setDescription("Example implementation of the Euroepe library.");
      [32m+[39m    }
       
      [37;41m-[39;49m	/**
      [37;41m-[39;49m	* {@inheritdoc}
      [37;41m-[39;49m	*/
      [37;41m-[39;49m	protected function execute(InputInterface $input, OutputInterface $output)
      [37;41m-[39;49m	{
      [37;41m-[39;49m		$formatter = $this->getHelper('formatter');
      [37;41m-[39;49m		$call = $input->getOption('call');
      [32m+[39m    /**
      [32m+[39m     * {@inheritdoc}
      [32m+[39m     */
      [32m+[39m    protected function execute(InputInterface $input, OutputInterface $output)
      [32m+[39m    {
      [32m+[39m        $formatter = $this->getHelper('formatter');
      [32m+[39m        $call = $input->getOption('call');
       
      [37;41m-[39;49m		if ($call == 'basic' || $call == 'all') {
      [37;41m-[39;49m			$data = $this->example->getBasicSearchQuery();
      [32m+[39m        if ($call == 'basic' || $call == 'all') {
      [32m+[39m            $data = $this->example->getBasicSearchQuery();
       
      [37;41m-[39;49m			$output->writeln("Basic search query");
      [37;41m-[39;49m			// $data = $this->example->getBasicInformation();
      [37;41m-[39;49m			/* $output->writeln("Basic information: ");
      [37;41m-[39;49m			foreach ($data as $key => $value) {
      [37;41m-[39;49m				$line = $formatter->formatSection($key, $value);
      [37;41m-[39;49m				$output->writeln($line);
      [37;41m-[39;49m			} */
      [37;41m-[39;49m		}
      [32m+[39m            $output->writeln("Basic search query");
      [32m+[39m            // $data = $this->example->getBasicInformation();
      [32m+[39m            /* $output->writeln("Basic information: ");
      [32m+[39m            foreach ($data as $key => $value) {
      [32m+[39m                $line = $formatter->formatSection($key, $value);
      [32m+[39m                $output->writeln($line);
      [32m+[39m            } */
      [32m+[39m        }
       
      [37;41m-[39;49m	/*	if ($call == 'formats' || $call == 'all') {
      [37;41m-[39;49m			$data = $this->example->getAvailableMetadataFormats();
      [37;41m-[39;49m			$table = new Table($output);
      [37;41m-[39;49m			$output->writeln("Metadata formats: ");
      [32m+[39m    /*	if ($call == 'formats' || $call == 'all') {
      [32m+[39m            $data = $this->example->getAvailableMetadataFormats();
      [32m+[39m            $table = new Table($output);
      [32m+[39m            $output->writeln("Metadata formats: ");
       
      [37;41m-[39;49m			$table->setHeaders($data['header']);
      [37;41m-[39;49m			$table->setRows($data['rows']);
      [37;41m-[39;49m			$table->render();
      [37;41m-[39;49m		}
      [32m+[39m            $table->setHeaders($data['header']);
      [32m+[39m            $table->setRows($data['rows']);
      [32m+[39m            $table->render();
      [32m+[39m        }
       
      [37;41m-[39;49m		if ($call == 'records' || $call == 'all') {
      [37;41m-[39;49m			$data = $this->example->getRecords();
      [37;41m-[39;49m			$table = new Table($output);
      [37;41m-[39;49m			$output->writeln("Ten records: ");
      [32m+[39m        if ($call == 'records' || $call == 'all') {
      [32m+[39m            $data = $this->example->getRecords();
      [32m+[39m            $table = new Table($output);
      [32m+[39m            $output->writeln("Ten records: ");
       
      [37;41m-[39;49m			$table->setHeaders($data['header']);
      [37;41m-[39;49m			$table->setRows($data['rows']);
      [37;41m-[39;49m			$table->render();
      [37;41m-[39;49m		}
      [32m+[39m            $table->setHeaders($data['header']);
      [32m+[39m            $table->setRows($data['rows']);
      [32m+[39m            $table->render();
      [32m+[39m        }
       
      [37;41m-[39;49m		if ($call == 'exception' || $call == 'all') {
      [37;41m-[39;49m			$data = $this->example->tryAnException();
      [37;41m-[39;49m		} */
      [37;41m-[39;49m	}
      [32m+[39m        if ($call == 'exception' || $call == 'all') {
      [32m+[39m            $data = $this->example->tryAnException();
      [32m+[39m        } */
      [32m+[39m    }
       }
       
      
[33m      ---------- end diff ----------[39m

   3) src/Europeana/Model/Item.php
[33m      ---------- begin diff ----------[39m
      [37;41m---[39;49m Original
      [32m+++[39m New
      @@ @@
        */
      [37;41m-[39;49mclass Item {
      [32m+[39mclass Item
      [32m+[39m{
       
         private $id;
       
      [37;41m-[39;49m  private $completeness;
      [32m+[39m    private $completeness;
       
      [37;41m-[39;49m  private $europeanaCollectionName;
      [32m+[39m    private $europeanaCollectionName;
       
      [37;41m-[39;49m  private $index;
      [32m+[39m    private $index;
       
      [37;41m-[39;49m  private $edmDatasetName;
      [32m+[39m    private $edmDatasetName;
       
      [37;41m-[39;49m  private $previewNoDistribute;
      [32m+[39m    private $previewNoDistribute;
       
      [37;41m-[39;49m  private $title;
      [32m+[39m    private $title;
       
      [37;41m-[39;49m  private $dataProvider;
      [32m+[39m    private $dataProvider;
       
      [37;41m-[39;49m  private $rights;
      [32m+[39m    private $rights;
       
      [37;41m-[39;49m  private $score;
      [32m+[39m    private $score;
       
      [37;41m-[39;49m  private $edmIsShownAt;
      [32m+[39m    private $edmIsShownAt;
       
      [37;41m-[39;49m  private $europeanaCompleteness;
      [32m+[39m    private $europeanaCompleteness;
       
      [37;41m-[39;49m  private $edmPreview;
      [32m+[39m    private $edmPreview;
       
      [37;41m-[39;49m  private $timestamp;
      [32m+[39m    private $timestamp;
       
      [37;41m-[39;49m  private $provider;
      [32m+[39m    private $provider;
       
      [37;41m-[39;49m  private $language;
      [32m+[39m    private $language;
       
      [37;41m-[39;49m  private $type;
      [32m+[39m    private $type;
       
      [37;41m-[39;49m  private $optedOut;
      [32m+[39m    private $optedOut;
       
      [37;41m-[39;49m  private $link;
      [32m+[39m    private $link;
       
      [37;41m-[39;49m  private $guid;
      [32m+[39m    private $guid;
       
      [37;41m-[39;49m  public function getId()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->id;
      [37;41m-[39;49m  }
      [32m+[39m    public function getId()
      [32m+[39m    {
      [32m+[39m        return $this->id;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getCompleteness()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->completeness;
      [37;41m-[39;49m  }
      [32m+[39m    public function getCompleteness()
      [32m+[39m    {
      [32m+[39m        return $this->completeness;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getEuropeanaCollectionName()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->europeanaCompleteness;
      [37;41m-[39;49m  }
      [32m+[39m    public function getEuropeanaCollectionName()
      [32m+[39m    {
      [32m+[39m        return $this->europeanaCompleteness;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getIndex()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->index;
      [37;41m-[39;49m  }
      [32m+[39m    public function getIndex()
      [32m+[39m    {
      [32m+[39m        return $this->index;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getEdmDatasetName()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->edmDatasetName;
      [37;41m-[39;49m  }
      [32m+[39m    public function getEdmDatasetName()
      [32m+[39m    {
      [32m+[39m        return $this->edmDatasetName;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getPreviewNoDistribute()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->previewNoDistribute;
      [37;41m-[39;49m  }
      [32m+[39m    public function getPreviewNoDistribute()
      [32m+[39m    {
      [32m+[39m        return $this->previewNoDistribute;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getTitle()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->title;
      [37;41m-[39;49m  }
      [32m+[39m    public function getTitle()
      [32m+[39m    {
      [32m+[39m        return $this->title;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getDataProvider()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->dataProvider;
      [37;41m-[39;49m  }
      [32m+[39m    public function getDataProvider()
      [32m+[39m    {
      [32m+[39m        return $this->dataProvider;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getRights()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->rights;
      [37;41m-[39;49m  }
      [32m+[39m    public function getRights()
      [32m+[39m    {
      [32m+[39m        return $this->rights;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getScore()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->score;
      [37;41m-[39;49m  }
      [32m+[39m    public function getScore()
      [32m+[39m    {
      [32m+[39m        return $this->score;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getEdmIsShownAt()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->edmIsShownAt;
      [37;41m-[39;49m  }
      [32m+[39m    public function getEdmIsShownAt()
      [32m+[39m    {
      [32m+[39m        return $this->edmIsShownAt;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getEuropeanaCompleteness()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->europeanaCompleteness;
      [37;41m-[39;49m  }
      [32m+[39m    public function getEuropeanaCompleteness()
      [32m+[39m    {
      [32m+[39m        return $this->europeanaCompleteness;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getEdmPreview()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->edmPreview;
      [37;41m-[39;49m  }
      [32m+[39m    public function getEdmPreview()
      [32m+[39m    {
      [32m+[39m        return $this->edmPreview;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getTimestamp()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->timestamp;
      [37;41m-[39;49m  }
      [32m+[39m    public function getTimestamp()
      [32m+[39m    {
      [32m+[39m        return $this->timestamp;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getProvider()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->provider;
      [37;41m-[39;49m  }
      [32m+[39m    public function getProvider()
      [32m+[39m    {
      [32m+[39m        return $this->provider;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getLanguage()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->provider;
      [37;41m-[39;49m  }
      [32m+[39m    public function getLanguage()
      [32m+[39m    {
      [32m+[39m        return $this->provider;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getType()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->type;
      [37;41m-[39;49m  }
      [32m+[39m    public function getType()
      [32m+[39m    {
      [32m+[39m        return $this->type;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getOptedOut()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->optedOut;
      [37;41m-[39;49m  }
      [32m+[39m    public function getOptedOut()
      [32m+[39m    {
      [32m+[39m        return $this->optedOut;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getLink()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->link;
      [37;41m-[39;49m  }
      [32m+[39m    public function getLink()
      [32m+[39m    {
      [32m+[39m        return $this->link;
      [32m+[39m    }
       
      [37;41m-[39;49m  public function getGuid()
      [37;41m-[39;49m  {
      [37;41m-[39;49m      return $this->guid;
      [37;41m-[39;49m  }
      [32m+[39m    public function getGuid()
      [32m+[39m    {
      [32m+[39m        return $this->guid;
      [32m+[39m    }
       }
       
      
[33m      ---------- end diff ----------[39m

   4) src/Europeana/Payload/AbstractPayload.php
[33m      ---------- begin diff ----------[39m
      [37;41m---[39;49m Original
      [32m+++[39m New
      @@ @@
                   if (isset($arg[$key])) {
      [37;41m-[39;49m                return TRUE;
      [32m+[39m                return true;
                   }
               }
       
      [37;41m-[39;49m        return FALSE;
      [32m+[39m        return false;
      
      @@ @@
       
      [37;41m-[39;49m        return FALSE;
      [32m+[39m        return false;
           }
       
      [37;41m-[39;49m    public function setArgument($key, $value, $multiple = FALSE)
      [32m+[39m    public function setArgument($key, $value, $multiple = false)
           {
               if ($multiple) {
                   $this->args[] = array($key, $value);
      [37;41m-[39;49m        }
      [37;41m-[39;49m        else {
      [32m+[39m        } else {
                   try {
                       if ($this->argumentExists('query')) {
                           new \Exception(sprintf(
                                   'Argument "%s" was already set with value "%s".',
                                   $key,
                                   $value
                               ));
                       }
                       $this->args[] = array($key, $value);
                   } catch (\Exception $e) {
                       throw new EuropeanaException('Failed to set invalid argument', null, $e);
                   }
               }
           }
       }
       
      
[33m      ---------- end diff ----------[39m

   5) src/Europeana/Payload/SearchPayload.php
[33m      ---------- begin diff ----------[39m
      [37;41m---[39;49m Original
      [32m+++[39m New
      @@ @@
       
      [37;41m-[39;49muse Europeana\Exception\EuropeanaException;
      
      @@ @@
           {
      [37;41m-[39;49m        $this->setArgument('profile', $value, TRUE);
      [32m+[39m        $this->setArgument('profile', $value, true);
           }
       
           public function setFacet($value)
           {
      [37;41m-[39;49m        $this->setArgument('facet', $value, TRUE);
      [32m+[39m        $this->setArgument('facet', $value, true);
           }
       
           /**
            * @return array
            */
           public function getContext()
           {
               $context = array();
       
               if ($profile = $this->getArgument('profile')) {
                   $context['profile'] = $profile;
               }
       
               return $context;
           }
       }
       
      
[33m      ---------- end diff ----------[39m

   6) src/Europeana/Serializer/AbstractSerializer.php
[33m      ---------- begin diff ----------[39m
      [37;41m---[39;49m Original
      [32m+++[39m New
      @@ @@
       use JMS\Serializer\Handler\HandlerRegistry;
      [37;41m-[39;49muse JMS\Serializer\DeserializationContext;
      [37;41m-[39;49muse Europeana\Serializer\ResponseCollectionHandler;
      
      @@ @@
           {
      [37;41m-[39;49m        $metaDir          = __DIR__ . '/../Resources/config/serializer';
      [32m+[39m        $metaDir          = __DIR__.'/../Resources/config/serializer';
      
      @@ @@
                   ->configureHandlers(
      [37;41m-[39;49m                function(HandlerRegistry $registry) {
      [32m+[39m                function (HandlerRegistry $registry) {
                         $registry->registerSubscribingHandler(new ResponseCollectionHandler());
               });
       
               $this->serializer = $builder->build();
           }
       }
       
      
[33m      ---------- end diff ----------[39m

   7) src/Europeana/Serializer/PayloadResponseSerializer.php
[33m      ---------- begin diff ----------[39m
      [37;41m---[39;49m Original
      [32m+++[39m New
      @@ @@
                       $payloadResponseClass,
      [37;41m-[39;49m                is_object($payloadResponseObject) ? 'instance of ' . get_class($payloadResponseObject) : gettype($payloadResponseObject)
      [32m+[39m                is_object($payloadResponseObject) ? 'instance of '.get_class($payloadResponseObject) : gettype($payloadResponseObject)
                   ));
               }
       
               return $payloadResponseObject;
           }
       }
       
      
[33m      ---------- end diff ----------[39m

   8) src/Europeana/Serializer/ResponseCollectionHandler.php
[33m      ---------- begin diff ----------[39m
      [37;41m---[39;49m Original
      [32m+++[39m New
      @@ @@
       use JMS\Serializer\VisitorInterface;
      [37;41m-[39;49muse Doctrine\Common\Collections\Collection;
       use JMS\Serializer\Handler\SubscribingHandlerInterface;
      [37;41m-[39;49muse Europeana\Search\Item;
       
       /**
        * @author Matthias Vandermaesen <matthias@colada.be>
        */
       class ResponseCollectionHandler implements SubscribingHandlerInterface
       {
           public static function getSubscribingMethods()
           {
               return array(
                   array(
                       'direction' => GraphNavigator::DIRECTION_DESERIALIZATION,
                       'format' => 'json',
                       'type' => 'ResponseCollection',
                       'method' => 'deserializeCollection',
                   ),
               );
           }
       
           public function deserializeCollection(VisitorInterface $visitor, $data, array $type, Context $context)
           {
               return new ArrayCollection($visitor->visitArray($data, $type, $context));
           }
       }
       
      
[33m      ---------- end diff ----------[39m

   9) src/Europeana/Transport/ApiClient.php
[33m      ---------- begin diff ----------[39m
      [37;41m---[39;49m Original
      [32m+++[39m New
      @@ @@
       use GuzzleHttp\Message\ResponseInterface;
      [37;41m-[39;49muse GuzzleHttp\Post\PostBody;
      
      @@ @@
           /**
      [37;41m-[39;49m     * @param string|null                   $apiKey
      [37;41m-[39;49m     * @param ClientInterface|null          $client
      [32m+[39m     * @param string|null          $apiKey
      [32m+[39m     * @param ClientInterface|null $client
      
      @@ @@
           {
      [37;41m-[39;49m        $url = self::API_BASE_URL.'/'. self::API_VERSION.'/'.$method;
      [32m+[39m        $url = self::API_BASE_URL.'/'.self::API_VERSION.'/'.$method;
               $request = $this->client->createRequest('GET', $url);
       
               $query = $request->getQuery();
               foreach ($arguments as $arg) {
                   list($key, $value) = $arg;
                   $query->add($key, $value);
               }
       
               return $request;
           }
       }
       
      
[33m      ---------- end diff ----------[39m

  10) tests/Europeana/SearchTest.php
[33m      ---------- begin diff ----------[39m
      [37;41m---[39;49m Original
      [32m+++[39m New
      @@ @@
           {
      [37;41m-[39;49m        $rawBody = file_get_contents(__DIR__ . '/../mock/bodies/body1');
      [32m+[39m        $rawBody = file_get_contents(__DIR__.'/../mock/bodies/body1');
      
      @@ @@
               try {
      [37;41m-[39;49m          $response = $this->apiClient->send($searchPayload);
      [37;41m-[39;49m          $items = $response->getItems();
      [32m+[39m            $response = $this->apiClient->send($searchPayload);
      [32m+[39m            $items = $response->getItems();
               } catch (EuropeanaException $e) {
      [37;41m-[39;49m          // Do something
      [32m+[39m            // Do something
               }
           }
       }
       
      
[33m      ---------- end diff ----------[39m

Fixed all files in 3.406 seconds, 6.000 MB memory used
